name: Arduino CLI build

on:
  pull_request:
    types: [opened, reopened]
    paths:
      - ".github/workflows/build_arduino.yml"
      - "examples/**"

  push:
    paths:
      - ".github/workflows/build_arduino.yml"
      - "examples/**"

env:
  # convenient variable used multiple times
  SKETCHES_REPORTS: sketches-reports

jobs:
  check_formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check code formatting
        uses: per1234/artistic-style-action@main
        with:
          options-file-path: ./examples/examples_formatter.conf
          name-patterns: |
            - '*.ino'
            - '*.cpp'
            - '*.hpp'
            - '*.h'
          target-paths: |
            - examples
  build:
    needs: check_formatting
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        fqbn:
          - "arduino:avr:yun"
          - "arduino:avr:uno"
          - "arduino:avr:diecimila"
          - "arduino:avr:mega"
          - "arduino:avr:megaADK"
          - "arduino:avr:leonardo"
          - "arduino:avr:micro"
          - "arduino:avr:esplora"
          - "arduino:avr:mini"
          - "arduino:avr:ethernet"
          - "arduino:avr:fio"
          - "arduino:avr:bt"
          # - "arduino:avr:LilyPad"  # board not found
          - "arduino:avr:LilyPadUSB"
          - "arduino:avr:pro"
          - "arduino:avr:atmegang"
          - "arduino:avr:robotControl"
          # - "arduino:avr:gemma"   # does not support SPI
          - "arduino:avr:circuitplay32u4cat"
          - "arduino:avr:yunmini"
          - "arduino:avr:chiwawa"
          - "arduino:avr:one"
          - "arduino:avr:unowifi"
          - "arduino:mbed:nano33ble"
          - "arduino:samd:mkr1000"
          - "arduino:samd:mkrwifi1010"
          - "arduino:samd:nano_33_iot"
          - "arduino:samd:mkrfox1200"
          - "arduino:samd:mkrwan1300"
          - "arduino:samd:mkrwan1310"
          - "arduino:samd:mkrgsm1400"
          - "arduino:samd:mkrnb1500"
          - "arduino:samd:mkrvidor4000"
          - "arduino:samd:adafruit_circuitplayground_m0"
          - "arduino:samd:mzero_pro_bl"
          - "arduino:samd:mzero_bl"
          - "arduino:samd:tian"
          - "arduino:megaavr:uno2018"
          # - "arduino:megaavr:nano4809"  # board not found
        # By default, don't generate size deltas data.
        enable-deltas-report: 
          - false
        # Generate size deltas data for this board
        include:
          - fqbn: arduino:avr:nano
            enable-deltas-report: true
          - fqbn: arduino:samd:mkrzero
            enable-deltas-report: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compile examples
        uses: arduino/compile-sketches@main
        with:
          sketch-paths: |
            - examples/RF24Mesh_Example
            - examples/RF24Mesh_Example_Master_Statics
            - examples/RF24Mesh_Example_Master_To_Nodes
            - examples/RF24Mesh_Example_Node2Node
            - examples/RF24Mesh_Example_Node2NodeExtra
            - examples/RF24Mesh_SerialConfig
            - examples/RF24Mesh_Example_Master
          libraries: |
            - name: RF24
            - source-url: https://github.com/nRF24/RF24Network.git
            - source-path: ./
          # - name: RF24Network
          fqbn: ${{ matrix.fqbn }}
          enable-deltas-report: ${{ matrix.enable-deltas-report }}
          sketches-report-path: ${{ env.SKETCHES_REPORTS }}
      # This step is needed to pass the size data to the report job 
      - name: Upload sketches report to workflow artifact
        if: ${{ matrix.enable-deltas-report }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.SKETCHES_REPORTS }}
          path: ${{ env.SKETCHES_REPORTS }}

  # When using a matrix to compile for multiple boards, it's necessary to use a separate job for the deltas report
  report:
    needs: [build]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Download sketches reports artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.SKETCHES_REPORTS }}
          path: ${{ env.SKETCHES_REPORTS }}

      - uses: arduino/report-size-deltas@v1
        with:
          sketches-reports-source: ${{ env.SKETCHES_REPORTS }}